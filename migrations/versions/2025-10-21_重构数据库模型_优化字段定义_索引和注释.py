"""重构数据库模型：优化字段定义、索引和注释

Revision ID: dbf5a57eee88
Revises: 2868aa3ed10a
Create Date: 2025-10-21 05:32:37.079674

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'dbf5a57eee88'
down_revision: Union[str, None] = '2868aa3ed10a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('email'), table_name='admin')
    op.drop_index(op.f('fs_uniquifier'), table_name='admin')
    op.drop_table('admin')
    op.drop_table('roles_admins')
    op.drop_table('role')
    op.add_column('audit_logs', sa.Column('operator_name', sa.String(length=255), nullable=True, comment='操作者名称，可选字段，用于记录操作者的显示名称或系统标识'))
    op.add_column('audit_logs', sa.Column('session_id', sa.String(length=255), nullable=True, comment='会话ID，可选字段，用于关联同一会话中的多个操作，便于行为分析'))
    op.add_column('audit_logs', sa.Column('is_success', sa.Boolean(), nullable=False, comment='操作是否成功，默认True，用于统计成功率和识别失败操作'))
    op.add_column('audit_logs', sa.Column('error_message', sa.Text(), nullable=True, comment='错误信息，可选字段，当操作失败时记录具体的错误描述'))
    op.add_column('audit_logs', sa.Column('duration_ms', sa.Integer(), nullable=True, comment='操作耗时，可选字段，单位毫秒，用于性能分析和优化'))
    op.add_column('audit_logs', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False, comment='记录更新时间，创建时设置为当前时间，更新时自动更新'))
    op.alter_column('audit_logs', 'id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='审计日志的唯一标识符，自增主键，用于唯一标识每条日志记录',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('audit_logs', 'user_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment='执行操作的用户ID，可选字段，关联到users表，系统操作时可为空',
               existing_nullable=True)
    op.alter_column('audit_logs', 'action_type',
               existing_type=mysql.ENUM('USER_CREATE', 'USER_UPDATE', 'USER_DELETE', 'USER_BLOCK', 'USER_UNBLOCK', 'USER_PROMOTE', 'USER_DEMOTE', 'MESSAGE_SEND', 'MESSAGE_DELETE', 'MESSAGE_EDIT', 'CONFIG_UPDATE', 'SYSTEM_START', 'SYSTEM_STOP', 'ADMIN_LOGIN', 'ADMIN_LOGOUT', 'ADMIN_ACTION', 'OTHER', collation='utf8mb4_unicode_ci'),
               comment='操作类型，必填字段，使用ActionType枚举值，用于分类和统计操作',
               existing_nullable=False)
    op.alter_column('audit_logs', 'target_type',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment='目标对象类型，可选字段，如user、message、config等，用于标识操作的目标类型',
               existing_nullable=True)
    op.alter_column('audit_logs', 'target_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='目标对象ID，可选字段，目标对象的唯一标识符，支持字符串格式以兼容不同类型的ID',
               existing_nullable=True)
    op.alter_column('audit_logs', 'description',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='操作描述，必填字段，详细描述本次操作的内容和目的，支持长文本',
               existing_nullable=False)
    op.alter_column('audit_logs', 'details',
               existing_type=mysql.JSON(),
               comment='操作详情，可选字段，JSON格式存储操作的详细信息、参数、结果等扩展数据',
               existing_nullable=True)
    op.alter_column('audit_logs', 'ip_address',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=45),
               comment='客户端IP地址，可选字段，支持IPv4和IPv6格式，用于安全审计和地理位置分析',
               existing_nullable=True)
    op.alter_column('audit_logs', 'user_agent',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='用户代理字符串，可选字段，记录客户端浏览器或应用信息，用于设备识别',
               existing_nullable=True)
    op.alter_column('audit_logs', 'created_at',
               existing_type=mysql.DATETIME(),
               comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index('idx_audit_logs_ip_created', 'audit_logs', ['ip_address', 'created_at'], unique=False)
    op.create_index('idx_audit_logs_session', 'audit_logs', ['session_id', 'created_at'], unique=False)
    op.create_index('idx_audit_logs_success_action', 'audit_logs', ['is_success', 'action_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_ip_address'), 'audit_logs', ['ip_address'], unique=False)
    op.create_index(op.f('ix_audit_logs_is_success'), 'audit_logs', ['is_success'], unique=False)
    op.add_column('configs', sa.Column('default_value', sa.Text(), nullable=True, comment='默认值，可选字段，当配置值为空时使用的默认值，格式与value字段相同'))
    op.add_column('configs', sa.Column('display_name', sa.String(length=255), nullable=True, comment='显示名称，可选字段，用于在管理界面显示的友好名称'))
    op.add_column('configs', sa.Column('is_system', sa.Boolean(), nullable=False, comment='是否系统配置，默认False，True表示此配置项为系统核心配置，需要特殊权限'))
    op.add_column('configs', sa.Column('validation_rule', sa.Text(), nullable=True, comment='验证规则，可选字段，JSON格式存储值的验证规则，如范围、格式、枚举值等'))
    op.add_column('configs', sa.Column('min_value', sa.String(length=255), nullable=True, comment='最小值，可选字段，用于数值类型配置的范围验证'))
    op.add_column('configs', sa.Column('max_value', sa.String(length=255), nullable=True, comment='最大值，可选字段，用于数值类型配置的范围验证'))
    op.add_column('configs', sa.Column('tags', sa.Text(), nullable=True, comment='标签，可选字段，逗号分隔的标签列表，用于配置项的标记和搜索'))
    op.add_column('configs', sa.Column('sort_order', sa.Integer(), nullable=False, comment='排序顺序，默认0，用于在管理界面中控制配置项的显示顺序'))
    op.add_column('configs', sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='软删除标志，False表示未删除，True表示已删除'))
    op.add_column('configs', sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='软删除时间，NULL表示未删除，有值表示删除时间'))
    op.add_column('configs', sa.Column('operated_by', sa.BigInteger(), nullable=True, comment='执行操作的用户ID，NULL表示系统操作'))
    op.alter_column('configs', 'key',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='配置键名，作为主键，唯一标识一个配置项，建议使用点分隔的层级结构',
               existing_nullable=False)
    op.alter_column('configs', 'value',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='配置值，可选字段，以字符串形式存储，实际类型由config_type字段决定',
               existing_nullable=True)
    op.alter_column('configs', 'config_type',
               existing_type=mysql.ENUM('STRING', 'INTEGER', 'FLOAT', 'BOOLEAN', 'JSON', 'TEXT', collation='utf8mb4_unicode_ci'),
               comment='配置类型，必填字段，使用ConfigType枚举值，用于值的类型验证和转换',
               existing_nullable=False)
    op.alter_column('configs', 'description',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='配置描述，可选字段，详细说明配置项的用途、影响范围和注意事项',
               existing_nullable=True)
    op.alter_column('configs', 'category',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment='配置分类，可选字段，用于将相关配置项分组管理，如system、bot、ui等',
               existing_nullable=True)
    op.alter_column('configs', 'is_public',
               existing_type=mysql.TINYINT(display_width=1),
               comment='是否公开，默认False，True表示普通用户可以查看此配置项',
               existing_nullable=False)
    op.alter_column('configs', 'is_editable',
               existing_type=mysql.TINYINT(display_width=1),
               comment='是否可编辑，默认True，False表示此配置项为只读，不允许修改',
               existing_nullable=False)
    op.alter_column('configs', 'created_at',
               existing_type=mysql.DATETIME(),
               comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('configs', 'updated_at',
               existing_type=mysql.DATETIME(),
               comment='记录更新时间，创建时设置为当前时间，更新时自动更新',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_configs_public_editable'), table_name='configs')
    op.create_index('idx_configs_category_public', 'configs', ['category', 'is_public'], unique=False)
    op.create_index('idx_configs_deleted', 'configs', ['is_deleted'], unique=False)
    op.create_index('idx_configs_permissions', 'configs', ['is_public', 'is_editable', 'is_system'], unique=False)
    op.create_index('idx_configs_sort', 'configs', ['category', 'sort_order'], unique=False)
    op.create_index('idx_configs_updated', 'configs', ['updated_at'], unique=False)
    op.create_index(op.f('ix_configs_config_type'), 'configs', ['config_type'], unique=False)
    op.create_index(op.f('ix_configs_is_deleted'), 'configs', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_configs_is_system'), 'configs', ['is_system'], unique=False)
    op.add_column('messages', sa.Column('caption', sa.Text(), nullable=True, comment='媒体说明，可选字段，存储图片、视频等媒体消息的说明文字'))
    op.add_column('messages', sa.Column('file_unique_id', sa.String(length=255), nullable=True, comment='文件唯一ID，可选字段，Telegram文件的永久唯一标识符'))
    op.add_column('messages', sa.Column('file_name', sa.String(length=255), nullable=True, comment='文件名称，可选字段，原始文件的名称'))
    op.add_column('messages', sa.Column('mime_type', sa.String(length=100), nullable=True, comment='MIME类型，可选字段，文件的媒体类型标识'))
    op.add_column('messages', sa.Column('forward_from_user_id', sa.BigInteger(), nullable=True, comment='转发来源用户ID，可选字段，原始消息发送者的用户ID'))
    op.add_column('messages', sa.Column('forward_from_chat_id', sa.BigInteger(), nullable=True, comment='转发来源聊天ID，可选字段，原始消息所在聊天的ID'))
    op.add_column('messages', sa.Column('forward_from_message_id', sa.BigInteger(), nullable=True, comment='转发来源消息ID，可选字段，原始消息的消息ID'))
    op.add_column('messages', sa.Column('reply_to_user_id', sa.BigInteger(), nullable=True, comment='回复目标用户ID，可选字段，被回复消息的发送者用户ID'))
    op.add_column('messages', sa.Column('is_edited', sa.Boolean(), nullable=False, comment='是否已编辑，默认False，True表示此消息已被用户编辑过'))
    op.add_column('messages', sa.Column('edit_date', sa.DateTime(), nullable=True, comment='编辑时间，可选字段，消息最后编辑的时间'))
    op.add_column('messages', sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='是否已删除，默认False，True表示此消息已被删除（软删除）'))
    op.add_column('messages', sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='删除时间，可选字段，消息被删除的时间'))
    op.add_column('messages', sa.Column('character_count', sa.Integer(), nullable=False, comment='字符数量，默认0，消息文本内容的字符数统计'))
    op.add_column('messages', sa.Column('word_count', sa.Integer(), nullable=False, comment='单词数量，默认0，消息文本内容的单词数统计'))
    op.add_column('messages', sa.Column('language_code', sa.String(length=10), nullable=True, comment='语言代码，可选字段，检测到的消息文本语言代码'))
    op.add_column('messages', sa.Column('sentiment_score', sa.Float(), nullable=True, comment='情感分数，可选字段，消息情感分析的分数，范围-1到1'))
    op.add_column('messages', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False, comment='记录更新时间，创建时设置为当前时间，更新时自动更新'))
    op.alter_column('messages', 'id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='消息记录ID，自增主键，唯一标识一条消息记录',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('messages', 'message_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment='Telegram消息ID，必填字段，Telegram平台的原始消息标识符',
               existing_nullable=False)
    op.alter_column('messages', 'user_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment='发送用户ID，必填字段，消息发送者的Telegram用户ID',
               existing_nullable=False)
    op.alter_column('messages', 'chat_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment='聊天ID，必填字段，消息所在聊天的Telegram聊天ID',
               existing_nullable=False)
    op.alter_column('messages', 'message_type',
               existing_type=mysql.ENUM('TEXT', 'PHOTO', 'VIDEO', 'AUDIO', 'VOICE', 'DOCUMENT', 'STICKER', 'ANIMATION', 'LOCATION', 'CONTACT', 'POLL', 'DICE', 'GAME', 'INVOICE', 'SUCCESSFUL_PAYMENT', 'OTHER', collation='utf8mb4_unicode_ci'),
               comment='消息类型，必填字段，使用MessageType枚举值标识消息的具体类型',
               existing_nullable=False)
    op.alter_column('messages', 'text_content',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='文本内容，可选字段，存储消息的文本内容，对于长消息会截取前1000字符',
               existing_nullable=True)
    op.alter_column('messages', 'file_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='文件ID，可选字段，Telegram文件的唯一标识符，用于媒体消息',
               existing_nullable=True)
    op.alter_column('messages', 'file_size',
               existing_type=mysql.INTEGER(display_width=11),
               type_=sa.BigInteger(),
               comment='文件大小，可选字段，文件的字节大小，用于存储统计',
               existing_nullable=True)
    op.alter_column('messages', 'is_forwarded',
               existing_type=mysql.TINYINT(display_width=1),
               comment='是否转发，默认False，True表示此消息是从其他聊天转发而来',
               existing_nullable=False)
    op.alter_column('messages', 'is_reply',
               existing_type=mysql.TINYINT(display_width=1),
               comment='是否回复，默认False，True表示此消息是对其他消息的回复',
               existing_nullable=False)
    op.alter_column('messages', 'reply_to_message_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment='回复目标消息ID，可选字段，被回复消息的Telegram消息ID',
               existing_nullable=True)
    op.alter_column('messages', 'created_at',
               existing_type=mysql.DATETIME(),
               comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_messages_telegram_id'), table_name='messages')
    op.create_index('idx_messages_deleted', 'messages', ['is_deleted', 'deleted_at'], unique=False)
    op.create_index('idx_messages_edited', 'messages', ['is_edited', 'edit_date'], unique=False)
    op.create_index('idx_messages_file', 'messages', ['file_id', 'message_type'], unique=False)
    op.create_index('idx_messages_forward', 'messages', ['is_forwarded', 'forward_from_user_id'], unique=False)
    op.create_index('idx_messages_lang_sentiment', 'messages', ['language_code', 'sentiment_score'], unique=False)
    op.create_index('idx_messages_reply', 'messages', ['is_reply', 'reply_to_message_id'], unique=False)
    op.create_index('idx_messages_telegram_unique', 'messages', ['message_id', 'chat_id'], unique=True)
    op.create_index('idx_messages_user_chat', 'messages', ['user_id', 'chat_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_messages_file_id'), 'messages', ['file_id'], unique=False)
    op.create_index(op.f('ix_messages_is_deleted'), 'messages', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_messages_is_forwarded'), 'messages', ['is_forwarded'], unique=False)
    op.create_index(op.f('ix_messages_is_reply'), 'messages', ['is_reply'], unique=False)
    op.create_index(op.f('ix_messages_message_id'), 'messages', ['message_id'], unique=False)
    op.create_index(op.f('ix_messages_reply_to_message_id'), 'messages', ['reply_to_message_id'], unique=False)
    op.add_column('statistics', sa.Column('period', sa.Enum('HOURLY', 'DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', 'REAL_TIME', name='statisticperiod'), nullable=False, comment='统计周期，必填字段，标识统计数据的时间粒度，默认为日级统计'))
    op.add_column('statistics', sa.Column('category', sa.String(length=100), nullable=True, comment='统计分类，可选字段，用于对统计指标进行分组管理'))
    op.add_column('statistics', sa.Column('sub_category', sa.String(length=100), nullable=True, comment='统计子分类，可选字段，用于更细粒度的分类管理'))
    op.add_column('statistics', sa.Column('float_value', sa.Float(), nullable=True, comment='浮点统计值，可选字段，用于存储需要小数精度的统计指标'))
    op.add_column('statistics', sa.Column('count', sa.Integer(), nullable=False, comment='计数值，必填字段，记录统计样本的数量，用于计算平均值等，默认为1'))
    op.add_column('statistics', sa.Column('min_value', sa.Float(), nullable=True, comment='最小值，可选字段，记录统计周期内的最小值'))
    op.add_column('statistics', sa.Column('max_value', sa.Float(), nullable=True, comment='最大值，可选字段，记录统计周期内的最大值'))
    op.add_column('statistics', sa.Column('sum_value', sa.Float(), nullable=True, comment='总和值，可选字段，记录统计周期内的累计值'))
    op.add_column('statistics', sa.Column('tags', sa.String(length=500), nullable=True, comment='标签，可选字段，逗号分隔的标签列表，用于统计数据的标记和搜索'))
    op.add_column('statistics', sa.Column('start_time', sa.DateTime(), nullable=True, comment='开始时间，可选字段，统计周期的开始时间，用于精确的时间范围统计'))
    op.add_column('statistics', sa.Column('end_time', sa.DateTime(), nullable=True, comment='结束时间，可选字段，统计周期的结束时间，用于精确的时间范围统计'))
    op.add_column('statistics', sa.Column('is_processed', sa.Boolean(), nullable=False, comment='是否已处理，默认True，False表示统计数据还在处理中'))
    op.add_column('statistics', sa.Column('is_aggregated', sa.Boolean(), nullable=False, comment='是否已聚合，默认False，True表示此数据是由其他数据聚合而来'))
    op.add_column('statistics', sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='软删除标志，False表示未删除，True表示已删除'))
    op.add_column('statistics', sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='软删除时间，NULL表示未删除，有值表示删除时间'))
    op.add_column('statistics', sa.Column('operated_by', sa.BigInteger(), nullable=True, comment='执行操作的用户ID，NULL表示系统操作'))
    op.alter_column('statistics', 'id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='统计记录ID，自增主键，唯一标识一条统计记录',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('statistics', 'statistic_type',
               existing_type=mysql.ENUM('DAILY_USERS', 'DAILY_MESSAGES', 'DAILY_NEW_USERS', 'DAILY_ACTIVE_USERS', 'WEEKLY_USERS', 'WEEKLY_MESSAGES', 'MONTHLY_USERS', 'MONTHLY_MESSAGES', 'COMMAND_USAGE', 'ERROR_COUNT', 'PERFORMANCE_METRIC', collation='utf8mb4_unicode_ci'),
               comment='统计类型，必填字段，使用StatisticType枚举值标识统计指标的类型',
               existing_nullable=False)
    op.alter_column('statistics', 'date',
               existing_type=sa.DATE(),
               comment='统计日期，必填字段，标识统计数据对应的日期',
               existing_nullable=False)
    op.alter_column('statistics', 'key',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='统计键，可选字段，用于细分统计维度，如命令名称、错误类型、用户分组等',
               existing_nullable=True)
    op.alter_column('statistics', 'value',
               existing_type=mysql.BIGINT(display_width=20),
               comment='统计值，必填字段，存储统计指标的数值，默认为0',
               existing_nullable=False)
    op.alter_column('statistics', 'extra_data',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=1000),
               type_=sa.Text(),
               comment='扩展数据，可选字段，JSON格式存储额外的统计元数据和详细信息',
               existing_nullable=True)
    op.alter_column('statistics', 'created_at',
               existing_type=mysql.DATETIME(),
               comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('statistics', 'updated_at',
               existing_type=mysql.DATETIME(),
               comment='记录更新时间，创建时设置为当前时间，更新时自动更新',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_statistics_date'), table_name='statistics')
    op.create_index('idx_statistics_category', 'statistics', ['category', 'sub_category'], unique=False)
    op.create_index('idx_statistics_complex', 'statistics', ['statistic_type', 'period', 'category', 'date'], unique=False)
    op.create_index('idx_statistics_deleted', 'statistics', ['is_deleted'], unique=False)
    op.create_index('idx_statistics_period_date', 'statistics', ['period', 'date'], unique=False)
    op.create_index('idx_statistics_processed', 'statistics', ['is_processed', 'is_aggregated'], unique=False)
    op.create_index('idx_statistics_time_range', 'statistics', ['start_time', 'end_time'], unique=False)
    op.create_index('idx_statistics_updated', 'statistics', ['updated_at'], unique=False)
    op.create_index('idx_statistics_value', 'statistics', ['value', 'float_value'], unique=False)
    op.create_index(op.f('ix_statistics_category'), 'statistics', ['category'], unique=False)
    op.create_index(op.f('ix_statistics_is_deleted'), 'statistics', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_statistics_is_processed'), 'statistics', ['is_processed'], unique=False)
    op.create_index(op.f('ix_statistics_period'), 'statistics', ['period'], unique=False)
    op.create_index(op.f('ix_statistics_value'), 'statistics', ['value'], unique=False)
    op.add_column('user_states', sa.Column('state_type', sa.String(length=100), nullable=True, comment='状态类型，可选字段，使用StateType枚举值标识状态的分类'))
    op.add_column('user_states', sa.Column('previous_state', sa.String(length=255), nullable=True, comment='前一个状态，可选字段，用于状态回滚和历史追踪'))
    op.add_column('user_states', sa.Column('priority', sa.String(length=20), nullable=False, comment='状态优先级，必填字段，用于状态冲突时的处理，默认为普通优先级'))
    op.add_column('user_states', sa.Column('context', sa.Text(), nullable=True, comment='状态上下文，可选字段，存储状态的详细上下文信息'))
    op.add_column('user_states', sa.Column('state_metadata', sa.Text(), nullable=True, comment='状态元数据，可选字段，JSON格式存储额外的状态元信息'))
    op.add_column('user_states', sa.Column('last_activity_at', sa.DateTime(), nullable=True, comment='最后活动时间，可选字段，记录用户在此状态下的最后活动时间'))
    op.add_column('user_states', sa.Column('duration_seconds', sa.Integer(), nullable=True, comment='持续时间，可选字段，状态持续的秒数，用于统计和分析'))
    op.add_column('user_states', sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活，必填字段，标识状态是否处于激活状态，默认为True'))
    op.add_column('user_states', sa.Column('is_persistent', sa.Boolean(), nullable=False, comment='是否持久化，必填字段，标识状态是否需要持久保存，默认为False'))
    op.add_column('user_states', sa.Column('is_locked', sa.Boolean(), nullable=False, comment='是否锁定，必填字段，标识状态是否被锁定不可修改，默认为False'))
    op.add_column('user_states', sa.Column('step_count', sa.Integer(), nullable=False, comment='步骤计数，必填字段，记录在当前状态下执行的步骤数量，默认为0'))
    op.add_column('user_states', sa.Column('retry_count', sa.Integer(), nullable=False, comment='重试次数，必填字段，记录状态操作的重试次数，默认为0'))
    op.add_column('user_states', sa.Column('error_count', sa.Integer(), nullable=False, comment='错误次数，必填字段，记录在当前状态下发生的错误次数，默认为0'))
    op.add_column('user_states', sa.Column('tags', sa.String(length=500), nullable=True, comment='标签，可选字段，逗号分隔的标签列表，用于状态的分类和搜索'))
    op.add_column('user_states', sa.Column('notes', sa.Text(), nullable=True, comment='备注，可选字段，状态的备注信息，用于调试和说明'))
    op.alter_column('user_states', 'user_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment='用户ID，复合主键的一部分，标识状态所属的用户',
               existing_nullable=False)
    op.alter_column('user_states', 'chat_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment='聊天ID，复合主键的一部分，标识状态所属的聊天会话',
               existing_nullable=False)
    op.alter_column('user_states', 'state',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='当前状态，可选字段，存储用户的当前FSM状态标识',
               existing_nullable=True)
    op.alter_column('user_states', 'data',
               existing_type=mysql.JSON(),
               comment='状态数据，可选字段，JSON格式存储状态相关的数据和参数',
               existing_nullable=True)
    op.alter_column('user_states', 'expires_at',
               existing_type=mysql.DATETIME(),
               comment='过期时间，可选字段，状态的过期时间，过期后状态将被自动清理',
               existing_nullable=True)
    op.alter_column('user_states', 'created_at',
               existing_type=mysql.DATETIME(),
               comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_states', 'updated_at',
               existing_type=mysql.DATETIME(),
               comment='记录更新时间，创建时设置为当前时间，更新时自动更新',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_user_states_expires'), table_name='user_states')
    op.create_index('idx_user_states_expires', 'user_states', ['expires_at', 'is_active'], unique=False)
    op.drop_index(op.f('idx_user_states_state'), table_name='user_states')
    op.create_index('idx_user_states_state', 'user_states', ['state', 'state_type'], unique=False)
    op.create_index('idx_user_states_activity', 'user_states', ['last_activity_at', 'is_active'], unique=False)
    op.create_index('idx_user_states_complex', 'user_states', ['user_id', 'state', 'is_active', 'expires_at'], unique=False)
    op.create_index('idx_user_states_control', 'user_states', ['is_active', 'is_persistent', 'is_locked'], unique=False)
    op.create_index('idx_user_states_created', 'user_states', ['created_at'], unique=False)
    op.create_index('idx_user_states_priority', 'user_states', ['priority', 'is_active'], unique=False)
    op.create_index('idx_user_states_stats', 'user_states', ['step_count', 'retry_count', 'error_count'], unique=False)
    op.create_index(op.f('ix_user_states_is_active'), 'user_states', ['is_active'], unique=False)
    op.create_index(op.f('ix_user_states_last_activity_at'), 'user_states', ['last_activity_at'], unique=False)
    op.create_index(op.f('ix_user_states_state_type'), 'user_states', ['state_type'], unique=False)
    op.add_column('users', sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='软删除标志，False表示未删除，True表示已删除'))
    op.add_column('users', sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='软删除时间，NULL表示未删除，有值表示删除时间'))
    op.add_column('users', sa.Column('operated_by', sa.BigInteger(), nullable=True, comment='执行操作的用户ID，NULL表示系统操作'))
    op.alter_column('users', 'id',
               existing_type=mysql.BIGINT(display_width=20),
               comment='用户的Telegram ID，作为主键，由Telegram系统分配的唯一标识符',
               existing_nullable=False,
               autoincrement=False)
    op.alter_column('users', 'first_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='用户的名字，必填字段，最大255字符，来自Telegram用户资料',
               existing_nullable=False)
    op.alter_column('users', 'last_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='用户的姓氏，可选字段，最大255字符，来自Telegram用户资料',
               existing_nullable=True)
    op.alter_column('users', 'username',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='用户的Telegram用户名，可选字段，不包含@符号，用于@提及和搜索',
               existing_nullable=True)
    op.alter_column('users', 'phone_number',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment='用户的电话号码，可选字段，格式为国际标准格式（如+86138****1234）',
               existing_nullable=True)
    op.alter_column('users', 'bio',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='用户的个人简介，可选字段，支持长文本，来自Telegram用户资料',
               existing_nullable=True)
    op.alter_column('users', 'language_code',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=10),
               comment='用户的语言代码，可选字段，ISO 639-1标准（如zh、en、ru等）',
               existing_nullable=True)
    op.alter_column('users', 'referrer',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='推荐人信息，可选字段，存储推荐人的标识或描述信息',
               existing_nullable=True)
    op.alter_column('users', 'referrer_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment='推荐人的用户ID，可选字段，外键关联到users表的id字段',
               existing_nullable=True)
    op.alter_column('users', 'last_activity_at',
               existing_type=mysql.DATETIME(),
               comment='用户最后活动时间，可选字段，记录用户最后一次与机器人交互的时间',
               existing_nullable=True)
    op.alter_column('users', 'is_admin',
               existing_type=mysql.TINYINT(display_width=1),
               comment='管理员标志，默认False，True表示该用户具有管理员权限',
               existing_nullable=False)
    op.alter_column('users', 'is_suspicious',
               existing_type=mysql.TINYINT(display_width=1),
               comment='可疑用户标志，默认False，True表示该用户被标记为可疑，需要特别关注',
               existing_nullable=False)
    op.alter_column('users', 'is_block',
               existing_type=mysql.TINYINT(display_width=1),
               comment='封禁状态标志，默认False，True表示该用户被封禁，无法使用机器人功能',
               existing_nullable=False)
    op.alter_column('users', 'is_premium',
               existing_type=mysql.TINYINT(display_width=1),
               comment='高级用户标志，默认False，True表示该用户是Telegram Premium用户',
               existing_nullable=False)
    op.alter_column('users', 'is_bot',
               existing_type=mysql.TINYINT(display_width=1),
               comment='机器人标志，默认False，True表示该账号是机器人而非真实用户',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
    op.alter_column('users', 'message_count',
               existing_type=mysql.INTEGER(display_width=11),
               comment='消息计数，默认0，记录用户发送给机器人的消息总数，用于统计分析',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
    op.alter_column('users', 'created_at',
               existing_type=mysql.DATETIME(),
               comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'updated_at',
               existing_type=mysql.DATETIME(),
               comment='记录更新时间，创建时设置为当前时间，更新时自动更新',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index('idx_users_deleted', 'users', ['is_deleted'], unique=False)
    op.create_index('idx_users_deleted_at', 'users', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_users_is_admin'), 'users', ['is_admin'], unique=False)
    op.create_index(op.f('ix_users_is_block'), 'users', ['is_block'], unique=False)
    op.create_index(op.f('ix_users_is_deleted'), 'users', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_users_is_premium'), 'users', ['is_premium'], unique=False)
    op.create_index(op.f('ix_users_is_suspicious'), 'users', ['is_suspicious'], unique=False)
    op.create_index(op.f('ix_users_last_activity_at'), 'users', ['last_activity_at'], unique=False)
    op.create_index(op.f('ix_users_referrer_id'), 'users', ['referrer_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_referrer_id'), table_name='users')
    op.drop_index(op.f('ix_users_last_activity_at'), table_name='users')
    op.drop_index(op.f('ix_users_is_suspicious'), table_name='users')
    op.drop_index(op.f('ix_users_is_premium'), table_name='users')
    op.drop_index(op.f('ix_users_is_deleted'), table_name='users')
    op.drop_index(op.f('ix_users_is_block'), table_name='users')
    op.drop_index(op.f('ix_users_is_admin'), table_name='users')
    op.drop_index('idx_users_deleted_at', table_name='users')
    op.drop_index('idx_users_deleted', table_name='users')
    op.alter_column('users', 'updated_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录更新时间，创建时设置为当前时间，更新时自动更新',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'created_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'message_count',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='消息计数，默认0，记录用户发送给机器人的消息总数，用于统计分析',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
    op.alter_column('users', 'is_bot',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='机器人标志，默认False，True表示该账号是机器人而非真实用户',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
    op.alter_column('users', 'is_premium',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='高级用户标志，默认False，True表示该用户是Telegram Premium用户',
               existing_nullable=False)
    op.alter_column('users', 'is_block',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='封禁状态标志，默认False，True表示该用户被封禁，无法使用机器人功能',
               existing_nullable=False)
    op.alter_column('users', 'is_suspicious',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='可疑用户标志，默认False，True表示该用户被标记为可疑，需要特别关注',
               existing_nullable=False)
    op.alter_column('users', 'is_admin',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='管理员标志，默认False，True表示该用户具有管理员权限',
               existing_nullable=False)
    op.alter_column('users', 'last_activity_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='用户最后活动时间，可选字段，记录用户最后一次与机器人交互的时间',
               existing_nullable=True)
    op.alter_column('users', 'referrer_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='推荐人的用户ID，可选字段，外键关联到users表的id字段',
               existing_nullable=True)
    op.alter_column('users', 'referrer',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='推荐人信息，可选字段，存储推荐人的标识或描述信息',
               existing_nullable=True)
    op.alter_column('users', 'language_code',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=10),
               comment=None,
               existing_comment='用户的语言代码，可选字段，ISO 639-1标准（如zh、en、ru等）',
               existing_nullable=True)
    op.alter_column('users', 'bio',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='用户的个人简介，可选字段，支持长文本，来自Telegram用户资料',
               existing_nullable=True)
    op.alter_column('users', 'phone_number',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='用户的电话号码，可选字段，格式为国际标准格式（如+86138****1234）',
               existing_nullable=True)
    op.alter_column('users', 'username',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='用户的Telegram用户名，可选字段，不包含@符号，用于@提及和搜索',
               existing_nullable=True)
    op.alter_column('users', 'last_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='用户的姓氏，可选字段，最大255字符，来自Telegram用户资料',
               existing_nullable=True)
    op.alter_column('users', 'first_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='用户的名字，必填字段，最大255字符，来自Telegram用户资料',
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='用户的Telegram ID，作为主键，由Telegram系统分配的唯一标识符',
               existing_nullable=False,
               autoincrement=False)
    op.drop_column('users', 'operated_by')
    op.drop_column('users', 'deleted_at')
    op.drop_column('users', 'is_deleted')
    op.drop_index(op.f('ix_user_states_state_type'), table_name='user_states')
    op.drop_index(op.f('ix_user_states_last_activity_at'), table_name='user_states')
    op.drop_index(op.f('ix_user_states_is_active'), table_name='user_states')
    op.drop_index('idx_user_states_stats', table_name='user_states')
    op.drop_index('idx_user_states_priority', table_name='user_states')
    op.drop_index('idx_user_states_created', table_name='user_states')
    op.drop_index('idx_user_states_control', table_name='user_states')
    op.drop_index('idx_user_states_complex', table_name='user_states')
    op.drop_index('idx_user_states_activity', table_name='user_states')
    op.drop_index('idx_user_states_state', table_name='user_states')
    op.create_index(op.f('idx_user_states_state'), 'user_states', ['state'], unique=False)
    op.drop_index('idx_user_states_expires', table_name='user_states')
    op.create_index(op.f('idx_user_states_expires'), 'user_states', ['expires_at'], unique=False)
    op.alter_column('user_states', 'updated_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录更新时间，创建时设置为当前时间，更新时自动更新',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_states', 'created_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_states', 'expires_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='过期时间，可选字段，状态的过期时间，过期后状态将被自动清理',
               existing_nullable=True)
    op.alter_column('user_states', 'data',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='状态数据，可选字段，JSON格式存储状态相关的数据和参数',
               existing_nullable=True)
    op.alter_column('user_states', 'state',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='当前状态，可选字段，存储用户的当前FSM状态标识',
               existing_nullable=True)
    op.alter_column('user_states', 'chat_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='聊天ID，复合主键的一部分，标识状态所属的聊天会话',
               existing_nullable=False)
    op.alter_column('user_states', 'user_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='用户ID，复合主键的一部分，标识状态所属的用户',
               existing_nullable=False)
    op.drop_column('user_states', 'notes')
    op.drop_column('user_states', 'tags')
    op.drop_column('user_states', 'error_count')
    op.drop_column('user_states', 'retry_count')
    op.drop_column('user_states', 'step_count')
    op.drop_column('user_states', 'is_locked')
    op.drop_column('user_states', 'is_persistent')
    op.drop_column('user_states', 'is_active')
    op.drop_column('user_states', 'duration_seconds')
    op.drop_column('user_states', 'last_activity_at')
    op.drop_column('user_states', 'state_metadata')
    op.drop_column('user_states', 'context')
    op.drop_column('user_states', 'priority')
    op.drop_column('user_states', 'previous_state')
    op.drop_column('user_states', 'state_type')
    op.drop_index(op.f('ix_statistics_value'), table_name='statistics')
    op.drop_index(op.f('ix_statistics_period'), table_name='statistics')
    op.drop_index(op.f('ix_statistics_is_processed'), table_name='statistics')
    op.drop_index(op.f('ix_statistics_is_deleted'), table_name='statistics')
    op.drop_index(op.f('ix_statistics_category'), table_name='statistics')
    op.drop_index('idx_statistics_value', table_name='statistics')
    op.drop_index('idx_statistics_updated', table_name='statistics')
    op.drop_index('idx_statistics_time_range', table_name='statistics')
    op.drop_index('idx_statistics_processed', table_name='statistics')
    op.drop_index('idx_statistics_period_date', table_name='statistics')
    op.drop_index('idx_statistics_deleted', table_name='statistics')
    op.drop_index('idx_statistics_complex', table_name='statistics')
    op.drop_index('idx_statistics_category', table_name='statistics')
    op.create_index(op.f('idx_statistics_date'), 'statistics', ['date'], unique=False)
    op.alter_column('statistics', 'updated_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录更新时间，创建时设置为当前时间，更新时自动更新',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('statistics', 'created_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('statistics', 'extra_data',
               existing_type=sa.Text(),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=1000),
               comment=None,
               existing_comment='扩展数据，可选字段，JSON格式存储额外的统计元数据和详细信息',
               existing_nullable=True)
    op.alter_column('statistics', 'value',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='统计值，必填字段，存储统计指标的数值，默认为0',
               existing_nullable=False)
    op.alter_column('statistics', 'key',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='统计键，可选字段，用于细分统计维度，如命令名称、错误类型、用户分组等',
               existing_nullable=True)
    op.alter_column('statistics', 'date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='统计日期，必填字段，标识统计数据对应的日期',
               existing_nullable=False)
    op.alter_column('statistics', 'statistic_type',
               existing_type=mysql.ENUM('DAILY_USERS', 'DAILY_MESSAGES', 'DAILY_NEW_USERS', 'DAILY_ACTIVE_USERS', 'WEEKLY_USERS', 'WEEKLY_MESSAGES', 'MONTHLY_USERS', 'MONTHLY_MESSAGES', 'COMMAND_USAGE', 'ERROR_COUNT', 'PERFORMANCE_METRIC', collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='统计类型，必填字段，使用StatisticType枚举值标识统计指标的类型',
               existing_nullable=False)
    op.alter_column('statistics', 'id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='统计记录ID，自增主键，唯一标识一条统计记录',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('statistics', 'operated_by')
    op.drop_column('statistics', 'deleted_at')
    op.drop_column('statistics', 'is_deleted')
    op.drop_column('statistics', 'is_aggregated')
    op.drop_column('statistics', 'is_processed')
    op.drop_column('statistics', 'end_time')
    op.drop_column('statistics', 'start_time')
    op.drop_column('statistics', 'tags')
    op.drop_column('statistics', 'sum_value')
    op.drop_column('statistics', 'max_value')
    op.drop_column('statistics', 'min_value')
    op.drop_column('statistics', 'count')
    op.drop_column('statistics', 'float_value')
    op.drop_column('statistics', 'sub_category')
    op.drop_column('statistics', 'category')
    op.drop_column('statistics', 'period')
    op.drop_index(op.f('ix_messages_reply_to_message_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_message_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_is_reply'), table_name='messages')
    op.drop_index(op.f('ix_messages_is_forwarded'), table_name='messages')
    op.drop_index(op.f('ix_messages_is_deleted'), table_name='messages')
    op.drop_index(op.f('ix_messages_file_id'), table_name='messages')
    op.drop_index('idx_messages_user_chat', table_name='messages')
    op.drop_index('idx_messages_telegram_unique', table_name='messages')
    op.drop_index('idx_messages_reply', table_name='messages')
    op.drop_index('idx_messages_lang_sentiment', table_name='messages')
    op.drop_index('idx_messages_forward', table_name='messages')
    op.drop_index('idx_messages_file', table_name='messages')
    op.drop_index('idx_messages_edited', table_name='messages')
    op.drop_index('idx_messages_deleted', table_name='messages')
    op.create_index(op.f('idx_messages_telegram_id'), 'messages', ['message_id', 'chat_id'], unique=False)
    op.alter_column('messages', 'created_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('messages', 'reply_to_message_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='回复目标消息ID，可选字段，被回复消息的Telegram消息ID',
               existing_nullable=True)
    op.alter_column('messages', 'is_reply',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='是否回复，默认False，True表示此消息是对其他消息的回复',
               existing_nullable=False)
    op.alter_column('messages', 'is_forwarded',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='是否转发，默认False，True表示此消息是从其他聊天转发而来',
               existing_nullable=False)
    op.alter_column('messages', 'file_size',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='文件大小，可选字段，文件的字节大小，用于存储统计',
               existing_nullable=True)
    op.alter_column('messages', 'file_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='文件ID，可选字段，Telegram文件的唯一标识符，用于媒体消息',
               existing_nullable=True)
    op.alter_column('messages', 'text_content',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='文本内容，可选字段，存储消息的文本内容，对于长消息会截取前1000字符',
               existing_nullable=True)
    op.alter_column('messages', 'message_type',
               existing_type=mysql.ENUM('TEXT', 'PHOTO', 'VIDEO', 'AUDIO', 'VOICE', 'DOCUMENT', 'STICKER', 'ANIMATION', 'LOCATION', 'CONTACT', 'POLL', 'DICE', 'GAME', 'INVOICE', 'SUCCESSFUL_PAYMENT', 'OTHER', collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='消息类型，必填字段，使用MessageType枚举值标识消息的具体类型',
               existing_nullable=False)
    op.alter_column('messages', 'chat_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='聊天ID，必填字段，消息所在聊天的Telegram聊天ID',
               existing_nullable=False)
    op.alter_column('messages', 'user_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='发送用户ID，必填字段，消息发送者的Telegram用户ID',
               existing_nullable=False)
    op.alter_column('messages', 'message_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='Telegram消息ID，必填字段，Telegram平台的原始消息标识符',
               existing_nullable=False)
    op.alter_column('messages', 'id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='消息记录ID，自增主键，唯一标识一条消息记录',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('messages', 'updated_at')
    op.drop_column('messages', 'sentiment_score')
    op.drop_column('messages', 'language_code')
    op.drop_column('messages', 'word_count')
    op.drop_column('messages', 'character_count')
    op.drop_column('messages', 'deleted_at')
    op.drop_column('messages', 'is_deleted')
    op.drop_column('messages', 'edit_date')
    op.drop_column('messages', 'is_edited')
    op.drop_column('messages', 'reply_to_user_id')
    op.drop_column('messages', 'forward_from_message_id')
    op.drop_column('messages', 'forward_from_chat_id')
    op.drop_column('messages', 'forward_from_user_id')
    op.drop_column('messages', 'mime_type')
    op.drop_column('messages', 'file_name')
    op.drop_column('messages', 'file_unique_id')
    op.drop_column('messages', 'caption')
    op.drop_index(op.f('ix_configs_is_system'), table_name='configs')
    op.drop_index(op.f('ix_configs_is_deleted'), table_name='configs')
    op.drop_index(op.f('ix_configs_config_type'), table_name='configs')
    op.drop_index('idx_configs_updated', table_name='configs')
    op.drop_index('idx_configs_sort', table_name='configs')
    op.drop_index('idx_configs_permissions', table_name='configs')
    op.drop_index('idx_configs_deleted', table_name='configs')
    op.drop_index('idx_configs_category_public', table_name='configs')
    op.create_index(op.f('idx_configs_public_editable'), 'configs', ['is_public', 'is_editable'], unique=False)
    op.alter_column('configs', 'updated_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录更新时间，创建时设置为当前时间，更新时自动更新',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('configs', 'created_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('configs', 'is_editable',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='是否可编辑，默认True，False表示此配置项为只读，不允许修改',
               existing_nullable=False)
    op.alter_column('configs', 'is_public',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='是否公开，默认False，True表示普通用户可以查看此配置项',
               existing_nullable=False)
    op.alter_column('configs', 'category',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment=None,
               existing_comment='配置分类，可选字段，用于将相关配置项分组管理，如system、bot、ui等',
               existing_nullable=True)
    op.alter_column('configs', 'description',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='配置描述，可选字段，详细说明配置项的用途、影响范围和注意事项',
               existing_nullable=True)
    op.alter_column('configs', 'config_type',
               existing_type=mysql.ENUM('STRING', 'INTEGER', 'FLOAT', 'BOOLEAN', 'JSON', 'TEXT', collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='配置类型，必填字段，使用ConfigType枚举值，用于值的类型验证和转换',
               existing_nullable=False)
    op.alter_column('configs', 'value',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='配置值，可选字段，以字符串形式存储，实际类型由config_type字段决定',
               existing_nullable=True)
    op.alter_column('configs', 'key',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='配置键名，作为主键，唯一标识一个配置项，建议使用点分隔的层级结构',
               existing_nullable=False)
    op.drop_column('configs', 'operated_by')
    op.drop_column('configs', 'deleted_at')
    op.drop_column('configs', 'is_deleted')
    op.drop_column('configs', 'sort_order')
    op.drop_column('configs', 'tags')
    op.drop_column('configs', 'max_value')
    op.drop_column('configs', 'min_value')
    op.drop_column('configs', 'validation_rule')
    op.drop_column('configs', 'is_system')
    op.drop_column('configs', 'display_name')
    op.drop_column('configs', 'default_value')
    op.drop_index(op.f('ix_audit_logs_is_success'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_ip_address'), table_name='audit_logs')
    op.drop_index('idx_audit_logs_success_action', table_name='audit_logs')
    op.drop_index('idx_audit_logs_session', table_name='audit_logs')
    op.drop_index('idx_audit_logs_ip_created', table_name='audit_logs')
    op.alter_column('audit_logs', 'created_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='记录创建时间，自动设置为当前时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('audit_logs', 'user_agent',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='用户代理字符串，可选字段，记录客户端浏览器或应用信息，用于设备识别',
               existing_nullable=True)
    op.alter_column('audit_logs', 'ip_address',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=45),
               comment=None,
               existing_comment='客户端IP地址，可选字段，支持IPv4和IPv6格式，用于安全审计和地理位置分析',
               existing_nullable=True)
    op.alter_column('audit_logs', 'details',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='操作详情，可选字段，JSON格式存储操作的详细信息、参数、结果等扩展数据',
               existing_nullable=True)
    op.alter_column('audit_logs', 'description',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='操作描述，必填字段，详细描述本次操作的内容和目的，支持长文本',
               existing_nullable=False)
    op.alter_column('audit_logs', 'target_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='目标对象ID，可选字段，目标对象的唯一标识符，支持字符串格式以兼容不同类型的ID',
               existing_nullable=True)
    op.alter_column('audit_logs', 'target_type',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment=None,
               existing_comment='目标对象类型，可选字段，如user、message、config等，用于标识操作的目标类型',
               existing_nullable=True)
    op.alter_column('audit_logs', 'action_type',
               existing_type=mysql.ENUM('USER_CREATE', 'USER_UPDATE', 'USER_DELETE', 'USER_BLOCK', 'USER_UNBLOCK', 'USER_PROMOTE', 'USER_DEMOTE', 'MESSAGE_SEND', 'MESSAGE_DELETE', 'MESSAGE_EDIT', 'CONFIG_UPDATE', 'SYSTEM_START', 'SYSTEM_STOP', 'ADMIN_LOGIN', 'ADMIN_LOGOUT', 'ADMIN_ACTION', 'OTHER', collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='操作类型，必填字段，使用ActionType枚举值，用于分类和统计操作',
               existing_nullable=False)
    op.alter_column('audit_logs', 'user_id',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='执行操作的用户ID，可选字段，关联到users表，系统操作时可为空',
               existing_nullable=True)
    op.alter_column('audit_logs', 'id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='审计日志的唯一标识符，自增主键，用于唯一标识每条日志记录',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('audit_logs', 'updated_at')
    op.drop_column('audit_logs', 'duration_ms')
    op.drop_column('audit_logs', 'error_message')
    op.drop_column('audit_logs', 'is_success')
    op.drop_column('audit_logs', 'session_id')
    op.drop_column('audit_logs', 'operator_name')
    op.create_table('role',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=80), nullable=True),
    sa.Column('description', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('roles_admins',
    sa.Column('admin_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('role_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], name=op.f('roles_admins_ibfk_1')),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('roles_admins_ibfk_2')),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('admin',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('first_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('last_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('email', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('password', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('confirmed_at', mysql.DATETIME(), nullable=True),
    sa.Column('fs_uniquifier', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('fs_uniquifier'), 'admin', ['fs_uniquifier'], unique=True)
    op.create_index(op.f('email'), 'admin', ['email'], unique=True)
    # ### end Alembic commands ###
