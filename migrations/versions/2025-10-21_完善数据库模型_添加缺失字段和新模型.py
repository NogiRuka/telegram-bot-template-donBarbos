"""完善数据库模型：添加缺失字段和新模型

Revision ID: 2868aa3ed10a
Revises: e4b7e8c165c1
Create Date: 2025-10-21 04:56:42.374360

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '2868aa3ed10a'
down_revision: Union[str, None] = 'e4b7e8c165c1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('action_type', sa.Enum('USER_CREATE', 'USER_UPDATE', 'USER_DELETE', 'USER_BLOCK', 'USER_UNBLOCK', 'USER_PROMOTE', 'USER_DEMOTE', 'MESSAGE_SEND', 'MESSAGE_DELETE', 'MESSAGE_EDIT', 'CONFIG_UPDATE', 'SYSTEM_START', 'SYSTEM_STOP', 'ADMIN_LOGIN', 'ADMIN_LOGOUT', 'ADMIN_ACTION', 'OTHER', name='actiontype'), nullable=False),
    sa.Column('target_type', sa.String(length=100), nullable=True),
    sa.Column('target_id', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_action_created', 'audit_logs', ['action_type', 'created_at'], unique=False)
    op.create_index('idx_audit_logs_created', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_logs_target', 'audit_logs', ['target_type', 'target_id'], unique=False)
    op.create_index('idx_audit_logs_user_created', 'audit_logs', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_action_type'), 'audit_logs', ['action_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_target_id'), 'audit_logs', ['target_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_target_type'), 'audit_logs', ['target_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('configs',
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('config_type', sa.Enum('STRING', 'INTEGER', 'FLOAT', 'BOOLEAN', 'JSON', 'TEXT', name='configtype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_editable', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index('idx_configs_category', 'configs', ['category'], unique=False)
    op.create_index('idx_configs_public_editable', 'configs', ['is_public', 'is_editable'], unique=False)
    op.create_index('idx_configs_type', 'configs', ['config_type'], unique=False)
    op.create_index(op.f('ix_configs_category'), 'configs', ['category'], unique=False)
    op.create_index(op.f('ix_configs_is_editable'), 'configs', ['is_editable'], unique=False)
    op.create_index(op.f('ix_configs_is_public'), 'configs', ['is_public'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('message_type', sa.Enum('TEXT', 'PHOTO', 'VIDEO', 'AUDIO', 'VOICE', 'DOCUMENT', 'STICKER', 'ANIMATION', 'LOCATION', 'CONTACT', 'POLL', 'DICE', 'GAME', 'INVOICE', 'SUCCESSFUL_PAYMENT', 'OTHER', name='messagetype'), nullable=False),
    sa.Column('text_content', sa.Text(), nullable=True),
    sa.Column('file_id', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('is_forwarded', sa.Boolean(), nullable=False),
    sa.Column('is_reply', sa.Boolean(), nullable=False),
    sa.Column('reply_to_message_id', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_messages_chat_created', 'messages', ['chat_id', 'created_at'], unique=False)
    op.create_index('idx_messages_telegram_id', 'messages', ['message_id', 'chat_id'], unique=False)
    op.create_index('idx_messages_type_created', 'messages', ['message_type', 'created_at'], unique=False)
    op.create_index('idx_messages_user_created', 'messages', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_messages_chat_id'), 'messages', ['chat_id'], unique=False)
    op.create_index(op.f('ix_messages_message_type'), 'messages', ['message_type'], unique=False)
    op.create_index(op.f('ix_messages_user_id'), 'messages', ['user_id'], unique=False)
    op.create_table('statistics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('statistic_type', sa.Enum('DAILY_USERS', 'DAILY_MESSAGES', 'DAILY_NEW_USERS', 'DAILY_ACTIVE_USERS', 'WEEKLY_USERS', 'WEEKLY_MESSAGES', 'MONTHLY_USERS', 'MONTHLY_MESSAGES', 'COMMAND_USAGE', 'ERROR_COUNT', 'PERFORMANCE_METRIC', name='statistictype'), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=True),
    sa.Column('value', sa.BigInteger(), nullable=False),
    sa.Column('extra_data', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_statistics_date', 'statistics', ['date'], unique=False)
    op.create_index('idx_statistics_type_date', 'statistics', ['statistic_type', 'date'], unique=False)
    op.create_index('idx_statistics_type_key_date', 'statistics', ['statistic_type', 'key', 'date'], unique=False)
    op.create_index(op.f('ix_statistics_date'), 'statistics', ['date'], unique=False)
    op.create_index(op.f('ix_statistics_key'), 'statistics', ['key'], unique=False)
    op.create_index(op.f('ix_statistics_statistic_type'), 'statistics', ['statistic_type'], unique=False)
    op.create_table('user_states',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'chat_id')
    )
    op.create_index('idx_user_states_expires', 'user_states', ['expires_at'], unique=False)
    op.create_index('idx_user_states_state', 'user_states', ['state'], unique=False)
    op.create_index('idx_user_states_updated', 'user_states', ['updated_at'], unique=False)
    op.create_index(op.f('ix_user_states_expires_at'), 'user_states', ['expires_at'], unique=False)
    op.create_index(op.f('ix_user_states_state'), 'user_states', ['state'], unique=False)
    # 先删除有外键约束的表
    op.drop_table('roles_admins')
    # 然后删除被引用的表
    op.drop_index(op.f('email'), table_name='admin')
    op.drop_index(op.f('fs_uniquifier'), table_name='admin')
    op.drop_table('admin')
    op.drop_index(op.f('name'), table_name='role')
    op.drop_table('role')
    op.add_column('users', sa.Column('phone_number', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('bio', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('referrer_id', sa.BigInteger(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False))
    op.add_column('users', sa.Column('last_activity_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('is_bot', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('message_count', sa.Integer(), nullable=False))
    op.create_index('idx_users_admin_premium', 'users', ['is_admin', 'is_premium'], unique=False)
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index('idx_users_last_activity', 'users', ['last_activity_at'], unique=False)
    op.create_index('idx_users_referrer_id', 'users', ['referrer_id'], unique=False)
    op.create_index('idx_users_status', 'users', ['is_block', 'is_suspicious'], unique=False)
    op.create_index('idx_users_updated_at', 'users', ['updated_at'], unique=False)
    op.create_index(op.f('ix_users_is_admin'), 'users', ['is_admin'], unique=False)
    op.create_index(op.f('ix_users_is_block'), 'users', ['is_block'], unique=False)
    op.create_index(op.f('ix_users_is_premium'), 'users', ['is_premium'], unique=False)
    op.create_index(op.f('ix_users_is_suspicious'), 'users', ['is_suspicious'], unique=False)
    op.create_index(op.f('ix_users_last_activity_at'), 'users', ['last_activity_at'], unique=False)
    op.create_index(op.f('ix_users_referrer_id'), 'users', ['referrer_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_referrer_id'), table_name='users')
    op.drop_index(op.f('ix_users_last_activity_at'), table_name='users')
    op.drop_index(op.f('ix_users_is_suspicious'), table_name='users')
    op.drop_index(op.f('ix_users_is_premium'), table_name='users')
    op.drop_index(op.f('ix_users_is_block'), table_name='users')
    op.drop_index(op.f('ix_users_is_admin'), table_name='users')
    op.drop_index('idx_users_updated_at', table_name='users')
    op.drop_index('idx_users_status', table_name='users')
    op.drop_index('idx_users_referrer_id', table_name='users')
    op.drop_index('idx_users_last_activity', table_name='users')
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_index('idx_users_admin_premium', table_name='users')
    op.drop_column('users', 'message_count')
    op.drop_column('users', 'is_bot')
    op.drop_column('users', 'last_activity_at')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'referrer_id')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'phone_number')
    op.create_table('roles_admins',
    sa.Column('admin_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('role_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], name=op.f('roles_admins_ibfk_1')),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('roles_admins_ibfk_2')),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('admin',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('first_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('last_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('email', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('password', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('confirmed_at', mysql.DATETIME(), nullable=True),
    sa.Column('fs_uniquifier', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('fs_uniquifier'), 'admin', ['fs_uniquifier'], unique=True)
    op.create_index(op.f('email'), 'admin', ['email'], unique=True)
    op.create_table('role',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=80), nullable=True),
    sa.Column('description', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('name'), 'role', ['name'], unique=True)
    op.drop_index(op.f('ix_user_states_state'), table_name='user_states')
    op.drop_index(op.f('ix_user_states_expires_at'), table_name='user_states')
    op.drop_index('idx_user_states_updated', table_name='user_states')
    op.drop_index('idx_user_states_state', table_name='user_states')
    op.drop_index('idx_user_states_expires', table_name='user_states')
    op.drop_table('user_states')
    op.drop_index(op.f('ix_statistics_statistic_type'), table_name='statistics')
    op.drop_index(op.f('ix_statistics_key'), table_name='statistics')
    op.drop_index(op.f('ix_statistics_date'), table_name='statistics')
    op.drop_index('idx_statistics_type_key_date', table_name='statistics')
    op.drop_index('idx_statistics_type_date', table_name='statistics')
    op.drop_index('idx_statistics_date', table_name='statistics')
    op.drop_table('statistics')
    op.drop_index(op.f('ix_messages_user_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_message_type'), table_name='messages')
    op.drop_index(op.f('ix_messages_chat_id'), table_name='messages')
    op.drop_index('idx_messages_user_created', table_name='messages')
    op.drop_index('idx_messages_type_created', table_name='messages')
    op.drop_index('idx_messages_telegram_id', table_name='messages')
    op.drop_index('idx_messages_chat_created', table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_configs_is_public'), table_name='configs')
    op.drop_index(op.f('ix_configs_is_editable'), table_name='configs')
    op.drop_index(op.f('ix_configs_category'), table_name='configs')
    op.drop_index('idx_configs_type', table_name='configs')
    op.drop_index('idx_configs_public_editable', table_name='configs')
    op.drop_index('idx_configs_category', table_name='configs')
    op.drop_table('configs')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_target_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_target_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action_type'), table_name='audit_logs')
    op.drop_index('idx_audit_logs_user_created', table_name='audit_logs')
    op.drop_index('idx_audit_logs_target', table_name='audit_logs')
    op.drop_index('idx_audit_logs_created', table_name='audit_logs')
    op.drop_index('idx_audit_logs_action_created', table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
