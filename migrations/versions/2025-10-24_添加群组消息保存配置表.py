"""添加群组消息保存配置表

Revision ID: 60caf28f7a25
Revises: 61c45d421fa3
Create Date: 2025-10-24 02:00:28.864158

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '60caf28f7a25'
down_revision: Union[str, None] = '61c45d421fa3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group_configs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='群组配置ID，自增主键，唯一标识一条群组配置记录'),
    sa.Column('chat_id', sa.BigInteger(), nullable=False, comment='聊天ID，必填字段，群组的Telegram聊天ID，确保唯一性'),
    sa.Column('chat_title', sa.String(length=255), nullable=True, comment='群组标题，可选字段，群组的显示名称'),
    sa.Column('chat_username', sa.String(length=100), nullable=True, comment='群组用户名，可选字段，群组的@用户名（如果有）'),
    sa.Column('group_type', sa.Enum('GROUP', 'SUPERGROUP', 'CHANNEL', name='grouptype'), nullable=False, comment='群组类型，必填字段，使用GroupType枚举值标识群组类型'),
    sa.Column('is_message_save_enabled', sa.Boolean(), nullable=False, comment='是否启用消息保存，默认False，True表示该群组启用消息保存功能'),
    sa.Column('message_save_mode', sa.Enum('ALL', 'TEXT_ONLY', 'MEDIA_ONLY', 'IMPORTANT_ONLY', 'DISABLED', name='messagesavemode'), nullable=False, comment='消息保存模式，默认DISABLED，定义该群组的消息保存策略'),
    sa.Column('save_start_date', sa.DateTime(), nullable=True, comment='保存开始时间，可选字段，从什么时间开始保存消息'),
    sa.Column('save_end_date', sa.DateTime(), nullable=True, comment='保存结束时间，可选字段，到什么时间停止保存消息'),
    sa.Column('max_messages_per_day', sa.Integer(), nullable=True, comment='每日最大消息数，可选字段，限制每天保存的消息数量，0表示无限制'),
    sa.Column('max_file_size_mb', sa.Integer(), nullable=True, comment='最大文件大小(MB)，可选字段，限制保存的文件大小，0表示无限制'),
    sa.Column('save_text_messages', sa.Boolean(), nullable=False, comment='保存文本消息，默认True，是否保存文本类型的消息'),
    sa.Column('save_media_messages', sa.Boolean(), nullable=False, comment='保存媒体消息，默认True，是否保存图片、视频等媒体消息'),
    sa.Column('save_forwarded_messages', sa.Boolean(), nullable=False, comment='保存转发消息，默认True，是否保存转发的消息'),
    sa.Column('save_reply_messages', sa.Boolean(), nullable=False, comment='保存回复消息，默认True，是否保存回复其他消息的消息'),
    sa.Column('save_bot_messages', sa.Boolean(), nullable=False, comment='保存机器人消息，默认False，是否保存机器人发送的消息'),
    sa.Column('include_keywords', sa.Text(), nullable=True, comment='包含关键词，可选字段，JSON格式存储，只保存包含这些关键词的消息'),
    sa.Column('exclude_keywords', sa.Text(), nullable=True, comment='排除关键词，可选字段，JSON格式存储，不保存包含这些关键词的消息'),
    sa.Column('total_messages_saved', sa.Integer(), nullable=False, comment='已保存消息总数，默认0，该群组已保存的消息数量统计'),
    sa.Column('last_message_date', sa.DateTime(), nullable=True, comment='最后消息时间，可选字段，该群组最后一条保存消息的时间'),
    sa.Column('configured_by_user_id', sa.BigInteger(), nullable=True, comment='配置者用户ID，可选字段，配置该群组设置的管理员用户ID'),
    sa.Column('notes', sa.Text(), nullable=True, comment='备注信息，可选字段，关于该群组配置的备注说明'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False, comment='记录创建时间，自动设置为当前时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False, comment='记录更新时间，创建时设置为当前时间，更新时自动更新'),
    sa.Column('created_by', sa.BigInteger(), nullable=True, comment='创建者用户ID，NULL表示系统创建'),
    sa.Column('updated_by', sa.BigInteger(), nullable=True, comment='最后更新者用户ID，NULL表示系统更新'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='软删除标志，False表示未删除，True表示已删除'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='软删除时间，NULL表示未删除，有值表示删除时间'),
    sa.Column('deleted_by', sa.BigInteger(), nullable=True, comment='删除者用户ID，NULL表示系统删除'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_group_configs_chat_id', 'group_configs', ['chat_id'], unique=False)
    op.create_index('idx_group_configs_enabled', 'group_configs', ['is_message_save_enabled'], unique=False)
    op.create_index('idx_group_configs_enabled_type', 'group_configs', ['is_message_save_enabled', 'group_type'], unique=False)
    op.create_index('idx_group_configs_last_message', 'group_configs', ['last_message_date'], unique=False)
    op.create_index('idx_group_configs_mode', 'group_configs', ['message_save_mode'], unique=False)
    op.create_index('idx_group_configs_save_dates', 'group_configs', ['save_start_date', 'save_end_date'], unique=False)
    op.create_index('idx_group_configs_stats', 'group_configs', ['total_messages_saved', 'last_message_date'], unique=False)
    op.create_index('idx_group_configs_type', 'group_configs', ['group_type'], unique=False)
    op.create_index('idx_group_configs_username', 'group_configs', ['chat_username'], unique=False)
    op.create_index(op.f('ix_group_configs_chat_id'), 'group_configs', ['chat_id'], unique=True)
    op.create_index(op.f('ix_group_configs_chat_username'), 'group_configs', ['chat_username'], unique=False)
    op.create_index(op.f('ix_group_configs_created_by'), 'group_configs', ['created_by'], unique=False)
    op.create_index(op.f('ix_group_configs_deleted_by'), 'group_configs', ['deleted_by'], unique=False)
    op.create_index(op.f('ix_group_configs_group_type'), 'group_configs', ['group_type'], unique=False)
    op.create_index(op.f('ix_group_configs_is_deleted'), 'group_configs', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_group_configs_is_message_save_enabled'), 'group_configs', ['is_message_save_enabled'], unique=False)
    op.create_index(op.f('ix_group_configs_message_save_mode'), 'group_configs', ['message_save_mode'], unique=False)
    op.create_index(op.f('ix_group_configs_updated_by'), 'group_configs', ['updated_by'], unique=False)
    op.alter_column('messages', 'message_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=False,
               comment='Telegram消息ID，必填字段，Telegram平台的原始消息标识符')
    op.alter_column('messages', 'user_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=False,
               comment='发送用户ID，必填字段，消息发送者的Telegram用户ID')
    op.alter_column('messages', 'chat_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=False,
               comment='聊天ID，必填字段，消息所在聊天的Telegram聊天ID')
    op.alter_column('messages', 'message_type',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               type_=sa.Enum('TEXT', 'PHOTO', 'VIDEO', 'AUDIO', 'VOICE', 'DOCUMENT', 'STICKER', 'ANIMATION', 'LOCATION', 'CONTACT', 'POLL', 'DICE', 'GAME', 'INVOICE', 'SUCCESSFUL_PAYMENT', 'VIDEO_NOTE', 'VENUE', 'WEB_APP_DATA', 'PASSPORT_DATA', 'PROXIMITY_ALERT', 'FORUM_TOPIC_CREATED', 'FORUM_TOPIC_EDITED', 'FORUM_TOPIC_CLOSED', 'FORUM_TOPIC_REOPENED', 'GENERAL_FORUM_TOPIC_HIDDEN', 'GENERAL_FORUM_TOPIC_UNHIDDEN', 'VIDEO_CHAT_SCHEDULED', 'VIDEO_CHAT_STARTED', 'VIDEO_CHAT_ENDED', 'VIDEO_CHAT_PARTICIPANTS_INVITED', 'OTHER', name='messagetype'),
               nullable=False,
               comment='消息类型，必填字段，使用MessageType枚举值标识消息的具体类型')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('messages', 'message_type',
               existing_type=sa.Enum('TEXT', 'PHOTO', 'VIDEO', 'AUDIO', 'VOICE', 'DOCUMENT', 'STICKER', 'ANIMATION', 'LOCATION', 'CONTACT', 'POLL', 'DICE', 'GAME', 'INVOICE', 'SUCCESSFUL_PAYMENT', 'VIDEO_NOTE', 'VENUE', 'WEB_APP_DATA', 'PASSPORT_DATA', 'PROXIMITY_ALERT', 'FORUM_TOPIC_CREATED', 'FORUM_TOPIC_EDITED', 'FORUM_TOPIC_CLOSED', 'FORUM_TOPIC_REOPENED', 'GENERAL_FORUM_TOPIC_HIDDEN', 'GENERAL_FORUM_TOPIC_UNHIDDEN', 'VIDEO_CHAT_SCHEDULED', 'VIDEO_CHAT_STARTED', 'VIDEO_CHAT_ENDED', 'VIDEO_CHAT_PARTICIPANTS_INVITED', 'OTHER', name='messagetype'),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               nullable=True,
               comment=None,
               existing_comment='消息类型，必填字段，使用MessageType枚举值标识消息的具体类型')
    op.alter_column('messages', 'chat_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=True,
               comment=None,
               existing_comment='聊天ID，必填字段，消息所在聊天的Telegram聊天ID')
    op.alter_column('messages', 'user_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=True,
               comment=None,
               existing_comment='发送用户ID，必填字段，消息发送者的Telegram用户ID')
    op.alter_column('messages', 'message_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=True,
               comment=None,
               existing_comment='Telegram消息ID，必填字段，Telegram平台的原始消息标识符')
    op.drop_index(op.f('ix_group_configs_updated_by'), table_name='group_configs')
    op.drop_index(op.f('ix_group_configs_message_save_mode'), table_name='group_configs')
    op.drop_index(op.f('ix_group_configs_is_message_save_enabled'), table_name='group_configs')
    op.drop_index(op.f('ix_group_configs_is_deleted'), table_name='group_configs')
    op.drop_index(op.f('ix_group_configs_group_type'), table_name='group_configs')
    op.drop_index(op.f('ix_group_configs_deleted_by'), table_name='group_configs')
    op.drop_index(op.f('ix_group_configs_created_by'), table_name='group_configs')
    op.drop_index(op.f('ix_group_configs_chat_username'), table_name='group_configs')
    op.drop_index(op.f('ix_group_configs_chat_id'), table_name='group_configs')
    op.drop_index('idx_group_configs_username', table_name='group_configs')
    op.drop_index('idx_group_configs_type', table_name='group_configs')
    op.drop_index('idx_group_configs_stats', table_name='group_configs')
    op.drop_index('idx_group_configs_save_dates', table_name='group_configs')
    op.drop_index('idx_group_configs_mode', table_name='group_configs')
    op.drop_index('idx_group_configs_last_message', table_name='group_configs')
    op.drop_index('idx_group_configs_enabled_type', table_name='group_configs')
    op.drop_index('idx_group_configs_enabled', table_name='group_configs')
    op.drop_index('idx_group_configs_chat_id', table_name='group_configs')
    op.drop_table('group_configs')
    # ### end Alembic commands ###
